"""Make date fields to str and optional

Revision ID: 74c39748dbab
Revises: 1c171e923eac
Create Date: 2024-02-10 14:15:27.103684

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '74c39748dbab'
down_revision: Union[str, None] = '1c171e923eac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('patients', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('patients', 'birthday',
               existing_type=sa.DATE(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('patients', 'first_visit',
               existing_type=sa.DATE(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('patients', 'last_visit',
               existing_type=sa.DATE(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('patients', 'last_visit',
               existing_type=sa.String(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('patients', 'first_visit',
               existing_type=sa.String(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('patients', 'birthday',
               existing_type=sa.String(),
               type_=sa.DATE(),
               nullable=False)
    op.alter_column('patients', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
